# --- CONFIGURACI�N DE CLOUDINARY ---

CLOUDINARY_URL=cloudinary://<293672568747254>:<CslSxXtIf7tI5RinbtlFwUlnXik>@dotd2ztme
cors.allowed-origins=http://localhost:5173,http://localhost:3000
cloudinary.cloud-name=dotd2ztme
cloudinary.api-key=293672568747254
cloudinary.api-secret=CslSxXtIf7tI5RinbtlFwUlnXik


# ï¿½AHORA DESDE GOOGLE SECRET MANAGER!
# Configuraciï¿½n para cargar las credenciales desde el archivo JSON de tu Service Account.
# spring.cloud.gcp.credentials.location=file:/C:/Users/natha/Documents/gcp-keys/ludicamente-46c78434e2b7.json

# --- DATOS DE CONEXIï¿½N A LA BASE DE DATOS ---
# spring.cloud.gcp.credentials.location=sm://projects/153489486214/secrets/ludicamente-gcs-credentials
# Configuraciï¿½n para cargar las credenciales desde el archivo JSON de tu Service Account.
# spring.cloud.gcp.credentials.location=file:/C:/Users/natha/Documents/gcp-keys/ludicamente-46c78434e2b7.json

#spring.cloud.gcp.credentials.location=file:/C:/Users/natha/Documents/gcp-keys/ludicamente-46c78434e2b7.json


# --- DATOS DE CONEXIï¿½N A LA BASE DE DATOS ---
spring.datasource.url=jdbc:mysql://localhost:3306/Ludicamente?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=

# Configuraciï¿½n de Mercado Pago
# MercadoPago
mercadopago.access.token=TEST-1692463810288523-062616-ba718c667dcf92b0835c59a4c7d71a49-2521088002
mercadopago.webhook.url=https://ed77-179-1-217-70.ngrok-free.app/api/pagos/webhook
# MercadoPago
mercadopago.access.token=TEST-1692463810288523-062616-ba718c667dcf92b0835c59a4c7d71a49-2521088002
mercadopago.webhook.url=https://558f-200-41-112-23.ngrok-free.app/api/pagos/webhook
frontend.url.success=https://7e0f-200-41-112-23.ngrok-free.app/pago-mercadopago
frontend.url.failure=https://7e0f-200-41-112-23.ngrok-free.app/pago-fallido
frontend.url.pending=https://7e0f-200-41-112-23.ngrok-free.app/pago-pendiente


# --- CONFIGURACIï¿½N JPA/HIBERNATE ---
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# --- CONFIGURACIï¿½N DE LOGS ---
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.jdbc=DEBUG

# --- CONFIGURACIï¿½N JWT ---
# Clave secreta (256 bits/32 caracteres) - usar comillas para caracteres especiales
# Se recomienda usar una variable de entorno tambiï¿½n para esto en producciï¿½n
jwt.secret-key="K7$pE9!qR3@vS6#bY2*mN5&cX8!zD4%gF1"

# Tiempo de expiraciï¿½n en milisegundos
jwt.expiration-time=3600000
jwt.refresh-expiration-time=86400000

# Configuraciï¿½n del token
jwt.token-prefix=Bearer
jwt.token.issuer=LudicamenteApp

# Establece el tamaï¿½o mï¿½ximo del archivo subido (ej. 50MB)
spring.servlet.multipart.max-file-size=50MB
# Establece el tamaï¿½o mï¿½ximo de la solicitud (incluyendo todos los archivos y datos del formulario, ej. 50MB)
spring.servlet.multipart.max-request-size=50MB

# --- LOGGING ADICIONAL ---
logging.level.com.ludicamente=DEBUG
logging.level.org.springframework.security=TRACE

# --- CONFIGURACIï¿½N DE EMAIL ---
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=santigbttobi@gmail.com
spring.mail.password=wgunygzdtsunfiqm
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

server.port=${PORT:8080}